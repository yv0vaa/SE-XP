name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run flake8
      run: |
        flake8 hw_checker/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 hw_checker/ --count --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run black (check mode)
      run: |
        black --check hw_checker/
    
    - name: Run isort (check mode)
      run: |
        isort --check-only --profile black hw_checker/
    
    - name: Run pylint
      run: |
        pylint hw_checker/assignments/ --disable=C0114,C0115,C0116,R0903 --max-line-length=127
      continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      working-directory: ./hw_checker
      run: |
        python manage.py migrate --noinput
    
    - name: Run Django tests
      working-directory: ./hw_checker
      run: |
        python manage.py test --verbosity=2
    
    - name: Check for missing migrations
      working-directory: ./hw_checker
      run: |
        python manage.py makemigrations --check --dry-run --noinput

